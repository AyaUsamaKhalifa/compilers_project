Terminals unused in grammar

    CONST
    PRINT


Grammar

    0 $accept: root $end

    1 root: root statement
    2     | root functional_statement
    3     | ε

    4 statement: conditional_statement
    5          | loop_statement
    6          | assignment ';'

    7 recursive_statement: recursive_statement statement
    8                    | ε

    9 conditional_statement: switch_conditional_statement
   10                      | if_conditional_statement

   11 if_conditional_statement: IF '(' expressions ')' '{' recursive_statement '}' ELSE '{' recursive_statement '}'
   12                         | IF '(' expressions ')' '{' recursive_statement '}'

   13 switch_conditional_statement: SWITCH '(' VARIABLE ')' '{' case_statement '}'

   14 case_statement: case_statement CASE variable_value ':' recursive_statement BREAK
   15               | ε

   16 loop_statement: for_loop_statement
   17               | while_loop_statement
   18               | do_while_loop_statement

   19 for_loop_statement: FOR '(' assignment ';' expressions ';' assignment ')' '{' recursive_statement '}'

   20 while_loop_statement: WHILE '(' expressions ')' '{' recursive_statement '}'

   21 do_while_loop_statement: DO '{' recursive_statement '}' WHILE '(' expressions ')'

   22 assignment: variable_Type VARIABLE '=' expressions
   23           | VARIABLE '=' expressions
   24           | ENUM VARIABLE VARIABLE '=' expressions
   25           | expressions

   26 expressions: expressions OR first
   27            | first

   28 first: first AND second
   29      | second

   30 second: second EE third
   31       | second NE third
   32       | third

   33 third: third '>' fourth
   34      | third '<' fourth
   35      | third GE fourth
   36      | third LE fourth
   37      | fourth

   38 fourth: fourth '+' fifth
   39       | fourth '-' fifth
   40       | fifth

   41 fifth: fifth '*' sixth
   42      | fifth '/' sixth
   43      | fifth '%' sixth
   44      | sixth

   45 sixth: '-' sixth
   46      | '!' sixth
   47      | seventh

   48 seventh: '(' expressions ')'
   49        | variable_value
   50        | VARIABLE
   51        | function_call

   52 function_call: VARIABLE '(' function_parameters_calls ')'

   53 functional_statement: function
   54                     | enum_statement

   55 function_parameters: parameter
   56                    | ε

   57 parameter: parameter ',' variable_Type VARIABLE
   58          | variable_Type VARIABLE

   59 function_parameters_calls: parameter_calls
   60                          | ε

   61 parameter_calls: parameter_calls ',' expressions
   62                | expressions

   63 function: variable_Type VARIABLE '(' function_parameters ')' '{' recursive_statement RETURN return_types ';' '}'
   64         | VOID VARIABLE '(' function_parameters ')' '{' recursive_statement '}'

   65 return_types: expressions

   66 enum_statement: ENUM VARIABLE '{' enum_variables '}'

   67 enum_variables: enum_variables ',' VARIABLE '=' expressions
   68               | enum_variables ',' VARIABLE
   69               | VARIABLE '=' expressions
   70               | VARIABLE

   71 variable_Type: INT_TYPE
   72              | CHAR_TYPE
   73              | BOOL_TYPE
   74              | FLOAT_TYPE
   75              | STRING_TYPE

   76 variable_value: INTEGER
   77               | FLOAT
   78               | BOOL_FALSE
   79               | BOOL_TRUE
   80               | CHAR
   81               | STRING


Terminals, with rules where they appear

    $end (0) 0
    '!' (33) 46
    '%' (37) 43
    '(' (40) 11 12 13 19 20 21 48 52 63 64
    ')' (41) 11 12 13 19 20 21 48 52 63 64
    '*' (42) 41
    '+' (43) 38
    ',' (44) 57 61 67 68
    '-' (45) 39 45
    '/' (47) 42
    ':' (58) 14
    ';' (59) 6 19 63
    '<' (60) 34
    '=' (61) 22 23 24 67 69
    '>' (62) 33
    '{' (123) 11 12 13 19 20 21 63 64 66
    '}' (125) 11 12 13 19 20 21 63 64 66
    error (256)
    IF (258) 11 12
    ELSE (259) 11
    FOR (260) 19
    WHILE (261) 20 21
    DO (262) 21
    SWITCH (263) 13
    CASE (264) 14
    BREAK (265) 14
    RETURN (266) 63
    ENUM (267) 24 66
    VOID (268) 64
    INT_TYPE (269) 71
    CHAR_TYPE (270) 72
    BOOL_TYPE (271) 73
    FLOAT_TYPE (272) 74
    STRING_TYPE (273) 75
    CONST (274)
    PRINT (275)
    EE <string_val> (276) 30
    NE <string_val> (277) 31
    GE <string_val> (278) 35
    LE <string_val> (279) 36
    AND <string_val> (280) 28
    OR <string_val> (281) 26
    INTEGER <integer_val> (282) 76
    FLOAT <float_val> (283) 77
    BOOL_FALSE <integer_val> (284) 78
    BOOL_TRUE <integer_val> (285) 79
    CHAR <char_val> (286) 80
    STRING <string_val> (287) 81
    VARIABLE <string_val> (288) 13 22 23 24 50 52 57 58 63 64 66 67 68 69 70


Nonterminals, with rules where they appear

    $accept (50)
        on left: 0
    root (51)
        on left: 1 2 3
        on right: 0 1 2
    statement (52)
        on left: 4 5 6
        on right: 1 7
    recursive_statement (53)
        on left: 7 8
        on right: 7 11 12 14 19 20 21 63 64
    conditional_statement (54)
        on left: 9 10
        on right: 4
    if_conditional_statement (55)
        on left: 11 12
        on right: 10
    switch_conditional_statement (56)
        on left: 13
        on right: 9
    case_statement (57)
        on left: 14 15
        on right: 13 14
    loop_statement (58)
        on left: 16 17 18
        on right: 5
    for_loop_statement (59)
        on left: 19
        on right: 16
    while_loop_statement (60)
        on left: 20
        on right: 17
    do_while_loop_statement (61)
        on left: 21
        on right: 18
    assignment (62)
        on left: 22 23 24 25
        on right: 6 19
    expressions (63)
        on left: 26 27
        on right: 11 12 19 20 21 22 23 24 25 26 48 61 62 65 67 69
    first (64)
        on left: 28 29
        on right: 26 27 28
    second (65)
        on left: 30 31 32
        on right: 28 29 30 31
    third (66)
        on left: 33 34 35 36 37
        on right: 30 31 32 33 34 35 36
    fourth (67)
        on left: 38 39 40
        on right: 33 34 35 36 37 38 39
    fifth (68)
        on left: 41 42 43 44
        on right: 38 39 40 41 42 43
    sixth (69)
        on left: 45 46 47
        on right: 41 42 43 44 45 46
    seventh (70)
        on left: 48 49 50 51
        on right: 47
    function_call (71)
        on left: 52
        on right: 51
    functional_statement (72)
        on left: 53 54
        on right: 2
    function_parameters (73)
        on left: 55 56
        on right: 63 64
    parameter (74)
        on left: 57 58
        on right: 55 57
    function_parameters_calls (75)
        on left: 59 60
        on right: 52
    parameter_calls (76)
        on left: 61 62
        on right: 59 61
    function (77)
        on left: 63 64
        on right: 53
    return_types (78)
        on left: 65
        on right: 63
    enum_statement (79)
        on left: 66
        on right: 54
    enum_variables (80)
        on left: 67 68 69 70
        on right: 66 67 68
    variable_Type <char*> (81)
        on left: 71 72 73 74 75
        on right: 22 57 58 63
    variable_value (82)
        on left: 76 77 78 79 80 81
        on right: 14 49


State 0

    0 $accept: • root $end

    $default  reduce using rule 3 (root)

    root  go to state 1


State 1

    0 $accept: root • $end
    1 root: root • statement
    2     | root • functional_statement

    $end         shift, and go to state 2
    IF           shift, and go to state 3
    FOR          shift, and go to state 4
    WHILE        shift, and go to state 5
    DO           shift, and go to state 6
    SWITCH       shift, and go to state 7
    ENUM         shift, and go to state 8
    VOID         shift, and go to state 9
    INT_TYPE     shift, and go to state 10
    CHAR_TYPE    shift, and go to state 11
    BOOL_TYPE    shift, and go to state 12
    FLOAT_TYPE   shift, and go to state 13
    STRING_TYPE  shift, and go to state 14
    INTEGER      shift, and go to state 15
    FLOAT        shift, and go to state 16
    BOOL_FALSE   shift, and go to state 17
    BOOL_TRUE    shift, and go to state 18
    CHAR         shift, and go to state 19
    STRING       shift, and go to state 20
    VARIABLE     shift, and go to state 21
    '('          shift, and go to state 22
    '-'          shift, and go to state 23
    '!'          shift, and go to state 24

    statement                     go to state 25
    conditional_statement         go to state 26
    if_conditional_statement      go to state 27
    switch_conditional_statement  go to state 28
    loop_statement                go to state 29
    for_loop_statement            go to state 30
    while_loop_statement          go to state 31
    do_while_loop_statement       go to state 32
    assignment                    go to state 33
    expressions                   go to state 34
    first                         go to state 35
    second                        go to state 36
    third                         go to state 37
    fourth                        go to state 38
    fifth                         go to state 39
    sixth                         go to state 40
    seventh                       go to state 41
    function_call                 go to state 42
    functional_statement          go to state 43
    function                      go to state 44
    enum_statement                go to state 45
    variable_Type                 go to state 46
    variable_value                go to state 47


State 2

    0 $accept: root $end •

    $default  accept


State 3

   11 if_conditional_statement: IF • '(' expressions ')' '{' recursive_statement '}' ELSE '{' recursive_statement '}'
   12                         | IF • '(' expressions ')' '{' recursive_statement '}'

    '('  shift, and go to state 48


State 4

   19 for_loop_statement: FOR • '(' assignment ';' expressions ';' assignment ')' '{' recursive_statement '}'

    '('  shift, and go to state 49


State 5

   20 while_loop_statement: WHILE • '(' expressions ')' '{' recursive_statement '}'

    '('  shift, and go to state 50


State 6

   21 do_while_loop_statement: DO • '{' recursive_statement '}' WHILE '(' expressions ')'

    '{'  shift, and go to state 51


State 7

   13 switch_conditional_statement: SWITCH • '(' VARIABLE ')' '{' case_statement '}'

    '('  shift, and go to state 52


State 8

   24 assignment: ENUM • VARIABLE VARIABLE '=' expressions
   66 enum_statement: ENUM • VARIABLE '{' enum_variables '}'

    VARIABLE  shift, and go to state 53


State 9

   64 function: VOID • VARIABLE '(' function_parameters ')' '{' recursive_statement '}'

    VARIABLE  shift, and go to state 54


State 10

   71 variable_Type: INT_TYPE •

    $default  reduce using rule 71 (variable_Type)


State 11

   72 variable_Type: CHAR_TYPE •

    $default  reduce using rule 72 (variable_Type)


State 12

   73 variable_Type: BOOL_TYPE •

    $default  reduce using rule 73 (variable_Type)


State 13

   74 variable_Type: FLOAT_TYPE •

    $default  reduce using rule 74 (variable_Type)


State 14

   75 variable_Type: STRING_TYPE •

    $default  reduce using rule 75 (variable_Type)


State 15

   76 variable_value: INTEGER •

    $default  reduce using rule 76 (variable_value)


State 16

   77 variable_value: FLOAT •

    $default  reduce using rule 77 (variable_value)


State 17

   78 variable_value: BOOL_FALSE •

    $default  reduce using rule 78 (variable_value)


State 18

   79 variable_value: BOOL_TRUE •

    $default  reduce using rule 79 (variable_value)


State 19

   80 variable_value: CHAR •

    $default  reduce using rule 80 (variable_value)


State 20

   81 variable_value: STRING •

    $default  reduce using rule 81 (variable_value)


State 21

   23 assignment: VARIABLE • '=' expressions
   50 seventh: VARIABLE •
   52 function_call: VARIABLE • '(' function_parameters_calls ')'

    '('  shift, and go to state 55
    '='  shift, and go to state 56

    $default  reduce using rule 50 (seventh)


State 22

   48 seventh: '(' • expressions ')'

    INTEGER     shift, and go to state 15
    FLOAT       shift, and go to state 16
    BOOL_FALSE  shift, and go to state 17
    BOOL_TRUE   shift, and go to state 18
    CHAR        shift, and go to state 19
    STRING      shift, and go to state 20
    VARIABLE    shift, and go to state 57
    '('         shift, and go to state 22
    '-'         shift, and go to state 23
    '!'         shift, and go to state 24

    expressions     go to state 58
    first           go to state 35
    second          go to state 36
    third           go to state 37
    fourth          go to state 38
    fifth           go to state 39
    sixth           go to state 40
    seventh         go to state 41
    function_call   go to state 42
    variable_value  go to state 47


State 23

   45 sixth: '-' • sixth

    INTEGER     shift, and go to state 15
    FLOAT       shift, and go to state 16
    BOOL_FALSE  shift, and go to state 17
    BOOL_TRUE   shift, and go to state 18
    CHAR        shift, and go to state 19
    STRING      shift, and go to state 20
    VARIABLE    shift, and go to state 57
    '('         shift, and go to state 22
    '-'         shift, and go to state 23
    '!'         shift, and go to state 24

    sixth           go to state 59
    seventh         go to state 41
    function_call   go to state 42
    variable_value  go to state 47


State 24

   46 sixth: '!' • sixth

    INTEGER     shift, and go to state 15
    FLOAT       shift, and go to state 16
    BOOL_FALSE  shift, and go to state 17
    BOOL_TRUE   shift, and go to state 18
    CHAR        shift, and go to state 19
    STRING      shift, and go to state 20
    VARIABLE    shift, and go to state 57
    '('         shift, and go to state 22
    '-'         shift, and go to state 23
    '!'         shift, and go to state 24

    sixth           go to state 60
    seventh         go to state 41
    function_call   go to state 42
    variable_value  go to state 47


State 25

    1 root: root statement •

    $default  reduce using rule 1 (root)


State 26

    4 statement: conditional_statement •

    $default  reduce using rule 4 (statement)


State 27

   10 conditional_statement: if_conditional_statement •

    $default  reduce using rule 10 (conditional_statement)


State 28

    9 conditional_statement: switch_conditional_statement •

    $default  reduce using rule 9 (conditional_statement)


State 29

    5 statement: loop_statement •

    $default  reduce using rule 5 (statement)


State 30

   16 loop_statement: for_loop_statement •

    $default  reduce using rule 16 (loop_statement)


State 31

   17 loop_statement: while_loop_statement •

    $default  reduce using rule 17 (loop_statement)


State 32

   18 loop_statement: do_while_loop_statement •

    $default  reduce using rule 18 (loop_statement)


State 33

    6 statement: assignment • ';'

    ';'  shift, and go to state 61


State 34

   25 assignment: expressions •
   26 expressions: expressions • OR first

    OR  shift, and go to state 62

    $default  reduce using rule 25 (assignment)


State 35

   27 expressions: first •
   28 first: first • AND second

    AND  shift, and go to state 63

    $default  reduce using rule 27 (expressions)


State 36

   29 first: second •
   30 second: second • EE third
   31       | second • NE third

    EE  shift, and go to state 64
    NE  shift, and go to state 65

    $default  reduce using rule 29 (first)


State 37

   32 second: third •
   33 third: third • '>' fourth
   34      | third • '<' fourth
   35      | third • GE fourth
   36      | third • LE fourth

    GE   shift, and go to state 66
    LE   shift, and go to state 67
    '>'  shift, and go to state 68
    '<'  shift, and go to state 69

    $default  reduce using rule 32 (second)


State 38

   37 third: fourth •
   38 fourth: fourth • '+' fifth
   39       | fourth • '-' fifth

    '+'  shift, and go to state 70
    '-'  shift, and go to state 71

    $default  reduce using rule 37 (third)


State 39

   40 fourth: fifth •
   41 fifth: fifth • '*' sixth
   42      | fifth • '/' sixth
   43      | fifth • '%' sixth

    '*'  shift, and go to state 72
    '/'  shift, and go to state 73
    '%'  shift, and go to state 74

    $default  reduce using rule 40 (fourth)


State 40

   44 fifth: sixth •

    $default  reduce using rule 44 (fifth)


State 41

   47 sixth: seventh •

    $default  reduce using rule 47 (sixth)


State 42

   51 seventh: function_call •

    $default  reduce using rule 51 (seventh)


State 43

    2 root: root functional_statement •

    $default  reduce using rule 2 (root)


State 44

   53 functional_statement: function •

    $default  reduce using rule 53 (functional_statement)


State 45

   54 functional_statement: enum_statement •

    $default  reduce using rule 54 (functional_statement)


State 46

   22 assignment: variable_Type • VARIABLE '=' expressions
   63 function: variable_Type • VARIABLE '(' function_parameters ')' '{' recursive_statement RETURN return_types ';' '}'

    VARIABLE  shift, and go to state 75


State 47

   49 seventh: variable_value •

    $default  reduce using rule 49 (seventh)


State 48

   11 if_conditional_statement: IF '(' • expressions ')' '{' recursive_statement '}' ELSE '{' recursive_statement '}'
   12                         | IF '(' • expressions ')' '{' recursive_statement '}'

    INTEGER     shift, and go to state 15
    FLOAT       shift, and go to state 16
    BOOL_FALSE  shift, and go to state 17
    BOOL_TRUE   shift, and go to state 18
    CHAR        shift, and go to state 19
    STRING      shift, and go to state 20
    VARIABLE    shift, and go to state 57
    '('         shift, and go to state 22
    '-'         shift, and go to state 23
    '!'         shift, and go to state 24

    expressions     go to state 76
    first           go to state 35
    second          go to state 36
    third           go to state 37
    fourth          go to state 38
    fifth           go to state 39
    sixth           go to state 40
    seventh         go to state 41
    function_call   go to state 42
    variable_value  go to state 47


State 49

   19 for_loop_statement: FOR '(' • assignment ';' expressions ';' assignment ')' '{' recursive_statement '}'

    ENUM         shift, and go to state 77
    INT_TYPE     shift, and go to state 10
    CHAR_TYPE    shift, and go to state 11
    BOOL_TYPE    shift, and go to state 12
    FLOAT_TYPE   shift, and go to state 13
    STRING_TYPE  shift, and go to state 14
    INTEGER      shift, and go to state 15
    FLOAT        shift, and go to state 16
    BOOL_FALSE   shift, and go to state 17
    BOOL_TRUE    shift, and go to state 18
    CHAR         shift, and go to state 19
    STRING       shift, and go to state 20
    VARIABLE     shift, and go to state 21
    '('          shift, and go to state 22
    '-'          shift, and go to state 23
    '!'          shift, and go to state 24

    assignment      go to state 78
    expressions     go to state 34
    first           go to state 35
    second          go to state 36
    third           go to state 37
    fourth          go to state 38
    fifth           go to state 39
    sixth           go to state 40
    seventh         go to state 41
    function_call   go to state 42
    variable_Type   go to state 79
    variable_value  go to state 47


State 50

   20 while_loop_statement: WHILE '(' • expressions ')' '{' recursive_statement '}'

    INTEGER     shift, and go to state 15
    FLOAT       shift, and go to state 16
    BOOL_FALSE  shift, and go to state 17
    BOOL_TRUE   shift, and go to state 18
    CHAR        shift, and go to state 19
    STRING      shift, and go to state 20
    VARIABLE    shift, and go to state 57
    '('         shift, and go to state 22
    '-'         shift, and go to state 23
    '!'         shift, and go to state 24

    expressions     go to state 80
    first           go to state 35
    second          go to state 36
    third           go to state 37
    fourth          go to state 38
    fifth           go to state 39
    sixth           go to state 40
    seventh         go to state 41
    function_call   go to state 42
    variable_value  go to state 47


State 51

   21 do_while_loop_statement: DO '{' • recursive_statement '}' WHILE '(' expressions ')'

    $default  reduce using rule 8 (recursive_statement)

    recursive_statement  go to state 81


State 52

   13 switch_conditional_statement: SWITCH '(' • VARIABLE ')' '{' case_statement '}'

    VARIABLE  shift, and go to state 82


State 53

   24 assignment: ENUM VARIABLE • VARIABLE '=' expressions
   66 enum_statement: ENUM VARIABLE • '{' enum_variables '}'

    VARIABLE  shift, and go to state 83
    '{'       shift, and go to state 84


State 54

   64 function: VOID VARIABLE • '(' function_parameters ')' '{' recursive_statement '}'

    '('  shift, and go to state 85


State 55

   52 function_call: VARIABLE '(' • function_parameters_calls ')'

    INTEGER     shift, and go to state 15
    FLOAT       shift, and go to state 16
    BOOL_FALSE  shift, and go to state 17
    BOOL_TRUE   shift, and go to state 18
    CHAR        shift, and go to state 19
    STRING      shift, and go to state 20
    VARIABLE    shift, and go to state 57
    '('         shift, and go to state 22
    '-'         shift, and go to state 23
    '!'         shift, and go to state 24

    $default  reduce using rule 60 (function_parameters_calls)

    expressions                go to state 86
    first                      go to state 35
    second                     go to state 36
    third                      go to state 37
    fourth                     go to state 38
    fifth                      go to state 39
    sixth                      go to state 40
    seventh                    go to state 41
    function_call              go to state 42
    function_parameters_calls  go to state 87
    parameter_calls            go to state 88
    variable_value             go to state 47


State 56

   23 assignment: VARIABLE '=' • expressions

    INTEGER     shift, and go to state 15
    FLOAT       shift, and go to state 16
    BOOL_FALSE  shift, and go to state 17
    BOOL_TRUE   shift, and go to state 18
    CHAR        shift, and go to state 19
    STRING      shift, and go to state 20
    VARIABLE    shift, and go to state 57
    '('         shift, and go to state 22
    '-'         shift, and go to state 23
    '!'         shift, and go to state 24

    expressions     go to state 89
    first           go to state 35
    second          go to state 36
    third           go to state 37
    fourth          go to state 38
    fifth           go to state 39
    sixth           go to state 40
    seventh         go to state 41
    function_call   go to state 42
    variable_value  go to state 47


State 57

   50 seventh: VARIABLE •
   52 function_call: VARIABLE • '(' function_parameters_calls ')'

    '('  shift, and go to state 55

    $default  reduce using rule 50 (seventh)


State 58

   26 expressions: expressions • OR first
   48 seventh: '(' expressions • ')'

    OR   shift, and go to state 62
    ')'  shift, and go to state 90


State 59

   45 sixth: '-' sixth •

    $default  reduce using rule 45 (sixth)


State 60

   46 sixth: '!' sixth •

    $default  reduce using rule 46 (sixth)


State 61

    6 statement: assignment ';' •

    $default  reduce using rule 6 (statement)


State 62

   26 expressions: expressions OR • first

    INTEGER     shift, and go to state 15
    FLOAT       shift, and go to state 16
    BOOL_FALSE  shift, and go to state 17
    BOOL_TRUE   shift, and go to state 18
    CHAR        shift, and go to state 19
    STRING      shift, and go to state 20
    VARIABLE    shift, and go to state 57
    '('         shift, and go to state 22
    '-'         shift, and go to state 23
    '!'         shift, and go to state 24

    first           go to state 91
    second          go to state 36
    third           go to state 37
    fourth          go to state 38
    fifth           go to state 39
    sixth           go to state 40
    seventh         go to state 41
    function_call   go to state 42
    variable_value  go to state 47


State 63

   28 first: first AND • second

    INTEGER     shift, and go to state 15
    FLOAT       shift, and go to state 16
    BOOL_FALSE  shift, and go to state 17
    BOOL_TRUE   shift, and go to state 18
    CHAR        shift, and go to state 19
    STRING      shift, and go to state 20
    VARIABLE    shift, and go to state 57
    '('         shift, and go to state 22
    '-'         shift, and go to state 23
    '!'         shift, and go to state 24

    second          go to state 92
    third           go to state 37
    fourth          go to state 38
    fifth           go to state 39
    sixth           go to state 40
    seventh         go to state 41
    function_call   go to state 42
    variable_value  go to state 47


State 64

   30 second: second EE • third

    INTEGER     shift, and go to state 15
    FLOAT       shift, and go to state 16
    BOOL_FALSE  shift, and go to state 17
    BOOL_TRUE   shift, and go to state 18
    CHAR        shift, and go to state 19
    STRING      shift, and go to state 20
    VARIABLE    shift, and go to state 57
    '('         shift, and go to state 22
    '-'         shift, and go to state 23
    '!'         shift, and go to state 24

    third           go to state 93
    fourth          go to state 38
    fifth           go to state 39
    sixth           go to state 40
    seventh         go to state 41
    function_call   go to state 42
    variable_value  go to state 47


State 65

   31 second: second NE • third

    INTEGER     shift, and go to state 15
    FLOAT       shift, and go to state 16
    BOOL_FALSE  shift, and go to state 17
    BOOL_TRUE   shift, and go to state 18
    CHAR        shift, and go to state 19
    STRING      shift, and go to state 20
    VARIABLE    shift, and go to state 57
    '('         shift, and go to state 22
    '-'         shift, and go to state 23
    '!'         shift, and go to state 24

    third           go to state 94
    fourth          go to state 38
    fifth           go to state 39
    sixth           go to state 40
    seventh         go to state 41
    function_call   go to state 42
    variable_value  go to state 47


State 66

   35 third: third GE • fourth

    INTEGER     shift, and go to state 15
    FLOAT       shift, and go to state 16
    BOOL_FALSE  shift, and go to state 17
    BOOL_TRUE   shift, and go to state 18
    CHAR        shift, and go to state 19
    STRING      shift, and go to state 20
    VARIABLE    shift, and go to state 57
    '('         shift, and go to state 22
    '-'         shift, and go to state 23
    '!'         shift, and go to state 24

    fourth          go to state 95
    fifth           go to state 39
    sixth           go to state 40
    seventh         go to state 41
    function_call   go to state 42
    variable_value  go to state 47


State 67

   36 third: third LE • fourth

    INTEGER     shift, and go to state 15
    FLOAT       shift, and go to state 16
    BOOL_FALSE  shift, and go to state 17
    BOOL_TRUE   shift, and go to state 18
    CHAR        shift, and go to state 19
    STRING      shift, and go to state 20
    VARIABLE    shift, and go to state 57
    '('         shift, and go to state 22
    '-'         shift, and go to state 23
    '!'         shift, and go to state 24

    fourth          go to state 96
    fifth           go to state 39
    sixth           go to state 40
    seventh         go to state 41
    function_call   go to state 42
    variable_value  go to state 47


State 68

   33 third: third '>' • fourth

    INTEGER     shift, and go to state 15
    FLOAT       shift, and go to state 16
    BOOL_FALSE  shift, and go to state 17
    BOOL_TRUE   shift, and go to state 18
    CHAR        shift, and go to state 19
    STRING      shift, and go to state 20
    VARIABLE    shift, and go to state 57
    '('         shift, and go to state 22
    '-'         shift, and go to state 23
    '!'         shift, and go to state 24

    fourth          go to state 97
    fifth           go to state 39
    sixth           go to state 40
    seventh         go to state 41
    function_call   go to state 42
    variable_value  go to state 47


State 69

   34 third: third '<' • fourth

    INTEGER     shift, and go to state 15
    FLOAT       shift, and go to state 16
    BOOL_FALSE  shift, and go to state 17
    BOOL_TRUE   shift, and go to state 18
    CHAR        shift, and go to state 19
    STRING      shift, and go to state 20
    VARIABLE    shift, and go to state 57
    '('         shift, and go to state 22
    '-'         shift, and go to state 23
    '!'         shift, and go to state 24

    fourth          go to state 98
    fifth           go to state 39
    sixth           go to state 40
    seventh         go to state 41
    function_call   go to state 42
    variable_value  go to state 47


State 70

   38 fourth: fourth '+' • fifth

    INTEGER     shift, and go to state 15
    FLOAT       shift, and go to state 16
    BOOL_FALSE  shift, and go to state 17
    BOOL_TRUE   shift, and go to state 18
    CHAR        shift, and go to state 19
    STRING      shift, and go to state 20
    VARIABLE    shift, and go to state 57
    '('         shift, and go to state 22
    '-'         shift, and go to state 23
    '!'         shift, and go to state 24

    fifth           go to state 99
    sixth           go to state 40
    seventh         go to state 41
    function_call   go to state 42
    variable_value  go to state 47


State 71

   39 fourth: fourth '-' • fifth

    INTEGER     shift, and go to state 15
    FLOAT       shift, and go to state 16
    BOOL_FALSE  shift, and go to state 17
    BOOL_TRUE   shift, and go to state 18
    CHAR        shift, and go to state 19
    STRING      shift, and go to state 20
    VARIABLE    shift, and go to state 57
    '('         shift, and go to state 22
    '-'         shift, and go to state 23
    '!'         shift, and go to state 24

    fifth           go to state 100
    sixth           go to state 40
    seventh         go to state 41
    function_call   go to state 42
    variable_value  go to state 47


State 72

   41 fifth: fifth '*' • sixth

    INTEGER     shift, and go to state 15
    FLOAT       shift, and go to state 16
    BOOL_FALSE  shift, and go to state 17
    BOOL_TRUE   shift, and go to state 18
    CHAR        shift, and go to state 19
    STRING      shift, and go to state 20
    VARIABLE    shift, and go to state 57
    '('         shift, and go to state 22
    '-'         shift, and go to state 23
    '!'         shift, and go to state 24

    sixth           go to state 101
    seventh         go to state 41
    function_call   go to state 42
    variable_value  go to state 47


State 73

   42 fifth: fifth '/' • sixth

    INTEGER     shift, and go to state 15
    FLOAT       shift, and go to state 16
    BOOL_FALSE  shift, and go to state 17
    BOOL_TRUE   shift, and go to state 18
    CHAR        shift, and go to state 19
    STRING      shift, and go to state 20
    VARIABLE    shift, and go to state 57
    '('         shift, and go to state 22
    '-'         shift, and go to state 23
    '!'         shift, and go to state 24

    sixth           go to state 102
    seventh         go to state 41
    function_call   go to state 42
    variable_value  go to state 47


State 74

   43 fifth: fifth '%' • sixth

    INTEGER     shift, and go to state 15
    FLOAT       shift, and go to state 16
    BOOL_FALSE  shift, and go to state 17
    BOOL_TRUE   shift, and go to state 18
    CHAR        shift, and go to state 19
    STRING      shift, and go to state 20
    VARIABLE    shift, and go to state 57
    '('         shift, and go to state 22
    '-'         shift, and go to state 23
    '!'         shift, and go to state 24

    sixth           go to state 103
    seventh         go to state 41
    function_call   go to state 42
    variable_value  go to state 47


State 75

   22 assignment: variable_Type VARIABLE • '=' expressions
   63 function: variable_Type VARIABLE • '(' function_parameters ')' '{' recursive_statement RETURN return_types ';' '}'

    '('  shift, and go to state 104
    '='  shift, and go to state 105


State 76

   11 if_conditional_statement: IF '(' expressions • ')' '{' recursive_statement '}' ELSE '{' recursive_statement '}'
   12                         | IF '(' expressions • ')' '{' recursive_statement '}'
   26 expressions: expressions • OR first

    OR   shift, and go to state 62
    ')'  shift, and go to state 106


State 77

   24 assignment: ENUM • VARIABLE VARIABLE '=' expressions

    VARIABLE  shift, and go to state 107


State 78

   19 for_loop_statement: FOR '(' assignment • ';' expressions ';' assignment ')' '{' recursive_statement '}'

    ';'  shift, and go to state 108


State 79

   22 assignment: variable_Type • VARIABLE '=' expressions

    VARIABLE  shift, and go to state 109


State 80

   20 while_loop_statement: WHILE '(' expressions • ')' '{' recursive_statement '}'
   26 expressions: expressions • OR first

    OR   shift, and go to state 62
    ')'  shift, and go to state 110


State 81

    7 recursive_statement: recursive_statement • statement
   21 do_while_loop_statement: DO '{' recursive_statement • '}' WHILE '(' expressions ')'

    IF           shift, and go to state 3
    FOR          shift, and go to state 4
    WHILE        shift, and go to state 5
    DO           shift, and go to state 6
    SWITCH       shift, and go to state 7
    ENUM         shift, and go to state 77
    INT_TYPE     shift, and go to state 10
    CHAR_TYPE    shift, and go to state 11
    BOOL_TYPE    shift, and go to state 12
    FLOAT_TYPE   shift, and go to state 13
    STRING_TYPE  shift, and go to state 14
    INTEGER      shift, and go to state 15
    FLOAT        shift, and go to state 16
    BOOL_FALSE   shift, and go to state 17
    BOOL_TRUE    shift, and go to state 18
    CHAR         shift, and go to state 19
    STRING       shift, and go to state 20
    VARIABLE     shift, and go to state 21
    '('          shift, and go to state 22
    '}'          shift, and go to state 111
    '-'          shift, and go to state 23
    '!'          shift, and go to state 24

    statement                     go to state 112
    conditional_statement         go to state 26
    if_conditional_statement      go to state 27
    switch_conditional_statement  go to state 28
    loop_statement                go to state 29
    for_loop_statement            go to state 30
    while_loop_statement          go to state 31
    do_while_loop_statement       go to state 32
    assignment                    go to state 33
    expressions                   go to state 34
    first                         go to state 35
    second                        go to state 36
    third                         go to state 37
    fourth                        go to state 38
    fifth                         go to state 39
    sixth                         go to state 40
    seventh                       go to state 41
    function_call                 go to state 42
    variable_Type                 go to state 79
    variable_value                go to state 47


State 82

   13 switch_conditional_statement: SWITCH '(' VARIABLE • ')' '{' case_statement '}'

    ')'  shift, and go to state 113


State 83

   24 assignment: ENUM VARIABLE VARIABLE • '=' expressions

    '='  shift, and go to state 114


State 84

   66 enum_statement: ENUM VARIABLE '{' • enum_variables '}'

    VARIABLE  shift, and go to state 115

    enum_variables  go to state 116


State 85

   64 function: VOID VARIABLE '(' • function_parameters ')' '{' recursive_statement '}'

    INT_TYPE     shift, and go to state 10
    CHAR_TYPE    shift, and go to state 11
    BOOL_TYPE    shift, and go to state 12
    FLOAT_TYPE   shift, and go to state 13
    STRING_TYPE  shift, and go to state 14

    $default  reduce using rule 56 (function_parameters)

    function_parameters  go to state 117
    parameter            go to state 118
    variable_Type        go to state 119


State 86

   26 expressions: expressions • OR first
   62 parameter_calls: expressions •

    OR  shift, and go to state 62

    $default  reduce using rule 62 (parameter_calls)


State 87

   52 function_call: VARIABLE '(' function_parameters_calls • ')'

    ')'  shift, and go to state 120


State 88

   59 function_parameters_calls: parameter_calls •
   61 parameter_calls: parameter_calls • ',' expressions

    ','  shift, and go to state 121

    $default  reduce using rule 59 (function_parameters_calls)


State 89

   23 assignment: VARIABLE '=' expressions •
   26 expressions: expressions • OR first

    OR  shift, and go to state 62

    $default  reduce using rule 23 (assignment)


State 90

   48 seventh: '(' expressions ')' •

    $default  reduce using rule 48 (seventh)


State 91

   26 expressions: expressions OR first •
   28 first: first • AND second

    AND  shift, and go to state 63

    $default  reduce using rule 26 (expressions)


State 92

   28 first: first AND second •
   30 second: second • EE third
   31       | second • NE third

    EE  shift, and go to state 64
    NE  shift, and go to state 65

    $default  reduce using rule 28 (first)


State 93

   30 second: second EE third •
   33 third: third • '>' fourth
   34      | third • '<' fourth
   35      | third • GE fourth
   36      | third • LE fourth

    GE   shift, and go to state 66
    LE   shift, and go to state 67
    '>'  shift, and go to state 68
    '<'  shift, and go to state 69

    $default  reduce using rule 30 (second)


State 94

   31 second: second NE third •
   33 third: third • '>' fourth
   34      | third • '<' fourth
   35      | third • GE fourth
   36      | third • LE fourth

    GE   shift, and go to state 66
    LE   shift, and go to state 67
    '>'  shift, and go to state 68
    '<'  shift, and go to state 69

    $default  reduce using rule 31 (second)


State 95

   35 third: third GE fourth •
   38 fourth: fourth • '+' fifth
   39       | fourth • '-' fifth

    '+'  shift, and go to state 70
    '-'  shift, and go to state 71

    $default  reduce using rule 35 (third)


State 96

   36 third: third LE fourth •
   38 fourth: fourth • '+' fifth
   39       | fourth • '-' fifth

    '+'  shift, and go to state 70
    '-'  shift, and go to state 71

    $default  reduce using rule 36 (third)


State 97

   33 third: third '>' fourth •
   38 fourth: fourth • '+' fifth
   39       | fourth • '-' fifth

    '+'  shift, and go to state 70
    '-'  shift, and go to state 71

    $default  reduce using rule 33 (third)


State 98

   34 third: third '<' fourth •
   38 fourth: fourth • '+' fifth
   39       | fourth • '-' fifth

    '+'  shift, and go to state 70
    '-'  shift, and go to state 71

    $default  reduce using rule 34 (third)


State 99

   38 fourth: fourth '+' fifth •
   41 fifth: fifth • '*' sixth
   42      | fifth • '/' sixth
   43      | fifth • '%' sixth

    '*'  shift, and go to state 72
    '/'  shift, and go to state 73
    '%'  shift, and go to state 74

    $default  reduce using rule 38 (fourth)


State 100

   39 fourth: fourth '-' fifth •
   41 fifth: fifth • '*' sixth
   42      | fifth • '/' sixth
   43      | fifth • '%' sixth

    '*'  shift, and go to state 72
    '/'  shift, and go to state 73
    '%'  shift, and go to state 74

    $default  reduce using rule 39 (fourth)


State 101

   41 fifth: fifth '*' sixth •

    $default  reduce using rule 41 (fifth)


State 102

   42 fifth: fifth '/' sixth •

    $default  reduce using rule 42 (fifth)


State 103

   43 fifth: fifth '%' sixth •

    $default  reduce using rule 43 (fifth)


State 104

   63 function: variable_Type VARIABLE '(' • function_parameters ')' '{' recursive_statement RETURN return_types ';' '}'

    INT_TYPE     shift, and go to state 10
    CHAR_TYPE    shift, and go to state 11
    BOOL_TYPE    shift, and go to state 12
    FLOAT_TYPE   shift, and go to state 13
    STRING_TYPE  shift, and go to state 14

    $default  reduce using rule 56 (function_parameters)

    function_parameters  go to state 122
    parameter            go to state 118
    variable_Type        go to state 119


State 105

   22 assignment: variable_Type VARIABLE '=' • expressions

    INTEGER     shift, and go to state 15
    FLOAT       shift, and go to state 16
    BOOL_FALSE  shift, and go to state 17
    BOOL_TRUE   shift, and go to state 18
    CHAR        shift, and go to state 19
    STRING      shift, and go to state 20
    VARIABLE    shift, and go to state 57
    '('         shift, and go to state 22
    '-'         shift, and go to state 23
    '!'         shift, and go to state 24

    expressions     go to state 123
    first           go to state 35
    second          go to state 36
    third           go to state 37
    fourth          go to state 38
    fifth           go to state 39
    sixth           go to state 40
    seventh         go to state 41
    function_call   go to state 42
    variable_value  go to state 47


State 106

   11 if_conditional_statement: IF '(' expressions ')' • '{' recursive_statement '}' ELSE '{' recursive_statement '}'
   12                         | IF '(' expressions ')' • '{' recursive_statement '}'

    '{'  shift, and go to state 124


State 107

   24 assignment: ENUM VARIABLE • VARIABLE '=' expressions

    VARIABLE  shift, and go to state 83


State 108

   19 for_loop_statement: FOR '(' assignment ';' • expressions ';' assignment ')' '{' recursive_statement '}'

    INTEGER     shift, and go to state 15
    FLOAT       shift, and go to state 16
    BOOL_FALSE  shift, and go to state 17
    BOOL_TRUE   shift, and go to state 18
    CHAR        shift, and go to state 19
    STRING      shift, and go to state 20
    VARIABLE    shift, and go to state 57
    '('         shift, and go to state 22
    '-'         shift, and go to state 23
    '!'         shift, and go to state 24

    expressions     go to state 125
    first           go to state 35
    second          go to state 36
    third           go to state 37
    fourth          go to state 38
    fifth           go to state 39
    sixth           go to state 40
    seventh         go to state 41
    function_call   go to state 42
    variable_value  go to state 47


State 109

   22 assignment: variable_Type VARIABLE • '=' expressions

    '='  shift, and go to state 105


State 110

   20 while_loop_statement: WHILE '(' expressions ')' • '{' recursive_statement '}'

    '{'  shift, and go to state 126


State 111

   21 do_while_loop_statement: DO '{' recursive_statement '}' • WHILE '(' expressions ')'

    WHILE  shift, and go to state 127


State 112

    7 recursive_statement: recursive_statement statement •

    $default  reduce using rule 7 (recursive_statement)


State 113

   13 switch_conditional_statement: SWITCH '(' VARIABLE ')' • '{' case_statement '}'

    '{'  shift, and go to state 128


State 114

   24 assignment: ENUM VARIABLE VARIABLE '=' • expressions

    INTEGER     shift, and go to state 15
    FLOAT       shift, and go to state 16
    BOOL_FALSE  shift, and go to state 17
    BOOL_TRUE   shift, and go to state 18
    CHAR        shift, and go to state 19
    STRING      shift, and go to state 20
    VARIABLE    shift, and go to state 57
    '('         shift, and go to state 22
    '-'         shift, and go to state 23
    '!'         shift, and go to state 24

    expressions     go to state 129
    first           go to state 35
    second          go to state 36
    third           go to state 37
    fourth          go to state 38
    fifth           go to state 39
    sixth           go to state 40
    seventh         go to state 41
    function_call   go to state 42
    variable_value  go to state 47


State 115

   69 enum_variables: VARIABLE • '=' expressions
   70               | VARIABLE •

    '='  shift, and go to state 130

    $default  reduce using rule 70 (enum_variables)


State 116

   66 enum_statement: ENUM VARIABLE '{' enum_variables • '}'
   67 enum_variables: enum_variables • ',' VARIABLE '=' expressions
   68               | enum_variables • ',' VARIABLE

    '}'  shift, and go to state 131
    ','  shift, and go to state 132


State 117

   64 function: VOID VARIABLE '(' function_parameters • ')' '{' recursive_statement '}'

    ')'  shift, and go to state 133


State 118

   55 function_parameters: parameter •
   57 parameter: parameter • ',' variable_Type VARIABLE

    ','  shift, and go to state 134

    $default  reduce using rule 55 (function_parameters)


State 119

   58 parameter: variable_Type • VARIABLE

    VARIABLE  shift, and go to state 135


State 120

   52 function_call: VARIABLE '(' function_parameters_calls ')' •

    $default  reduce using rule 52 (function_call)


State 121

   61 parameter_calls: parameter_calls ',' • expressions

    INTEGER     shift, and go to state 15
    FLOAT       shift, and go to state 16
    BOOL_FALSE  shift, and go to state 17
    BOOL_TRUE   shift, and go to state 18
    CHAR        shift, and go to state 19
    STRING      shift, and go to state 20
    VARIABLE    shift, and go to state 57
    '('         shift, and go to state 22
    '-'         shift, and go to state 23
    '!'         shift, and go to state 24

    expressions     go to state 136
    first           go to state 35
    second          go to state 36
    third           go to state 37
    fourth          go to state 38
    fifth           go to state 39
    sixth           go to state 40
    seventh         go to state 41
    function_call   go to state 42
    variable_value  go to state 47


State 122

   63 function: variable_Type VARIABLE '(' function_parameters • ')' '{' recursive_statement RETURN return_types ';' '}'

    ')'  shift, and go to state 137


State 123

   22 assignment: variable_Type VARIABLE '=' expressions •
   26 expressions: expressions • OR first

    OR  shift, and go to state 62

    $default  reduce using rule 22 (assignment)


State 124

   11 if_conditional_statement: IF '(' expressions ')' '{' • recursive_statement '}' ELSE '{' recursive_statement '}'
   12                         | IF '(' expressions ')' '{' • recursive_statement '}'

    $default  reduce using rule 8 (recursive_statement)

    recursive_statement  go to state 138


State 125

   19 for_loop_statement: FOR '(' assignment ';' expressions • ';' assignment ')' '{' recursive_statement '}'
   26 expressions: expressions • OR first

    OR   shift, and go to state 62
    ';'  shift, and go to state 139


State 126

   20 while_loop_statement: WHILE '(' expressions ')' '{' • recursive_statement '}'

    $default  reduce using rule 8 (recursive_statement)

    recursive_statement  go to state 140


State 127

   21 do_while_loop_statement: DO '{' recursive_statement '}' WHILE • '(' expressions ')'

    '('  shift, and go to state 141


State 128

   13 switch_conditional_statement: SWITCH '(' VARIABLE ')' '{' • case_statement '}'

    $default  reduce using rule 15 (case_statement)

    case_statement  go to state 142


State 129

   24 assignment: ENUM VARIABLE VARIABLE '=' expressions •
   26 expressions: expressions • OR first

    OR  shift, and go to state 62

    $default  reduce using rule 24 (assignment)


State 130

   69 enum_variables: VARIABLE '=' • expressions

    INTEGER     shift, and go to state 15
    FLOAT       shift, and go to state 16
    BOOL_FALSE  shift, and go to state 17
    BOOL_TRUE   shift, and go to state 18
    CHAR        shift, and go to state 19
    STRING      shift, and go to state 20
    VARIABLE    shift, and go to state 57
    '('         shift, and go to state 22
    '-'         shift, and go to state 23
    '!'         shift, and go to state 24

    expressions     go to state 143
    first           go to state 35
    second          go to state 36
    third           go to state 37
    fourth          go to state 38
    fifth           go to state 39
    sixth           go to state 40
    seventh         go to state 41
    function_call   go to state 42
    variable_value  go to state 47


State 131

   66 enum_statement: ENUM VARIABLE '{' enum_variables '}' •

    $default  reduce using rule 66 (enum_statement)


State 132

   67 enum_variables: enum_variables ',' • VARIABLE '=' expressions
   68               | enum_variables ',' • VARIABLE

    VARIABLE  shift, and go to state 144


State 133

   64 function: VOID VARIABLE '(' function_parameters ')' • '{' recursive_statement '}'

    '{'  shift, and go to state 145


State 134

   57 parameter: parameter ',' • variable_Type VARIABLE

    INT_TYPE     shift, and go to state 10
    CHAR_TYPE    shift, and go to state 11
    BOOL_TYPE    shift, and go to state 12
    FLOAT_TYPE   shift, and go to state 13
    STRING_TYPE  shift, and go to state 14

    variable_Type  go to state 146


State 135

   58 parameter: variable_Type VARIABLE •

    $default  reduce using rule 58 (parameter)


State 136

   26 expressions: expressions • OR first
   61 parameter_calls: parameter_calls ',' expressions •

    OR  shift, and go to state 62

    $default  reduce using rule 61 (parameter_calls)


State 137

   63 function: variable_Type VARIABLE '(' function_parameters ')' • '{' recursive_statement RETURN return_types ';' '}'

    '{'  shift, and go to state 147


State 138

    7 recursive_statement: recursive_statement • statement
   11 if_conditional_statement: IF '(' expressions ')' '{' recursive_statement • '}' ELSE '{' recursive_statement '}'
   12                         | IF '(' expressions ')' '{' recursive_statement • '}'

    IF           shift, and go to state 3
    FOR          shift, and go to state 4
    WHILE        shift, and go to state 5
    DO           shift, and go to state 6
    SWITCH       shift, and go to state 7
    ENUM         shift, and go to state 77
    INT_TYPE     shift, and go to state 10
    CHAR_TYPE    shift, and go to state 11
    BOOL_TYPE    shift, and go to state 12
    FLOAT_TYPE   shift, and go to state 13
    STRING_TYPE  shift, and go to state 14
    INTEGER      shift, and go to state 15
    FLOAT        shift, and go to state 16
    BOOL_FALSE   shift, and go to state 17
    BOOL_TRUE    shift, and go to state 18
    CHAR         shift, and go to state 19
    STRING       shift, and go to state 20
    VARIABLE     shift, and go to state 21
    '('          shift, and go to state 22
    '}'          shift, and go to state 148
    '-'          shift, and go to state 23
    '!'          shift, and go to state 24

    statement                     go to state 112
    conditional_statement         go to state 26
    if_conditional_statement      go to state 27
    switch_conditional_statement  go to state 28
    loop_statement                go to state 29
    for_loop_statement            go to state 30
    while_loop_statement          go to state 31
    do_while_loop_statement       go to state 32
    assignment                    go to state 33
    expressions                   go to state 34
    first                         go to state 35
    second                        go to state 36
    third                         go to state 37
    fourth                        go to state 38
    fifth                         go to state 39
    sixth                         go to state 40
    seventh                       go to state 41
    function_call                 go to state 42
    variable_Type                 go to state 79
    variable_value                go to state 47


State 139

   19 for_loop_statement: FOR '(' assignment ';' expressions ';' • assignment ')' '{' recursive_statement '}'

    ENUM         shift, and go to state 77
    INT_TYPE     shift, and go to state 10
    CHAR_TYPE    shift, and go to state 11
    BOOL_TYPE    shift, and go to state 12
    FLOAT_TYPE   shift, and go to state 13
    STRING_TYPE  shift, and go to state 14
    INTEGER      shift, and go to state 15
    FLOAT        shift, and go to state 16
    BOOL_FALSE   shift, and go to state 17
    BOOL_TRUE    shift, and go to state 18
    CHAR         shift, and go to state 19
    STRING       shift, and go to state 20
    VARIABLE     shift, and go to state 21
    '('          shift, and go to state 22
    '-'          shift, and go to state 23
    '!'          shift, and go to state 24

    assignment      go to state 149
    expressions     go to state 34
    first           go to state 35
    second          go to state 36
    third           go to state 37
    fourth          go to state 38
    fifth           go to state 39
    sixth           go to state 40
    seventh         go to state 41
    function_call   go to state 42
    variable_Type   go to state 79
    variable_value  go to state 47


State 140

    7 recursive_statement: recursive_statement • statement
   20 while_loop_statement: WHILE '(' expressions ')' '{' recursive_statement • '}'

    IF           shift, and go to state 3
    FOR          shift, and go to state 4
    WHILE        shift, and go to state 5
    DO           shift, and go to state 6
    SWITCH       shift, and go to state 7
    ENUM         shift, and go to state 77
    INT_TYPE     shift, and go to state 10
    CHAR_TYPE    shift, and go to state 11
    BOOL_TYPE    shift, and go to state 12
    FLOAT_TYPE   shift, and go to state 13
    STRING_TYPE  shift, and go to state 14
    INTEGER      shift, and go to state 15
    FLOAT        shift, and go to state 16
    BOOL_FALSE   shift, and go to state 17
    BOOL_TRUE    shift, and go to state 18
    CHAR         shift, and go to state 19
    STRING       shift, and go to state 20
    VARIABLE     shift, and go to state 21
    '('          shift, and go to state 22
    '}'          shift, and go to state 150
    '-'          shift, and go to state 23
    '!'          shift, and go to state 24

    statement                     go to state 112
    conditional_statement         go to state 26
    if_conditional_statement      go to state 27
    switch_conditional_statement  go to state 28
    loop_statement                go to state 29
    for_loop_statement            go to state 30
    while_loop_statement          go to state 31
    do_while_loop_statement       go to state 32
    assignment                    go to state 33
    expressions                   go to state 34
    first                         go to state 35
    second                        go to state 36
    third                         go to state 37
    fourth                        go to state 38
    fifth                         go to state 39
    sixth                         go to state 40
    seventh                       go to state 41
    function_call                 go to state 42
    variable_Type                 go to state 79
    variable_value                go to state 47


State 141

   21 do_while_loop_statement: DO '{' recursive_statement '}' WHILE '(' • expressions ')'

    INTEGER     shift, and go to state 15
    FLOAT       shift, and go to state 16
    BOOL_FALSE  shift, and go to state 17
    BOOL_TRUE   shift, and go to state 18
    CHAR        shift, and go to state 19
    STRING      shift, and go to state 20
    VARIABLE    shift, and go to state 57
    '('         shift, and go to state 22
    '-'         shift, and go to state 23
    '!'         shift, and go to state 24

    expressions     go to state 151
    first           go to state 35
    second          go to state 36
    third           go to state 37
    fourth          go to state 38
    fifth           go to state 39
    sixth           go to state 40
    seventh         go to state 41
    function_call   go to state 42
    variable_value  go to state 47


State 142

   13 switch_conditional_statement: SWITCH '(' VARIABLE ')' '{' case_statement • '}'
   14 case_statement: case_statement • CASE variable_value ':' recursive_statement BREAK

    CASE  shift, and go to state 152
    '}'   shift, and go to state 153


State 143

   26 expressions: expressions • OR first
   69 enum_variables: VARIABLE '=' expressions •

    OR  shift, and go to state 62

    $default  reduce using rule 69 (enum_variables)


State 144

   67 enum_variables: enum_variables ',' VARIABLE • '=' expressions
   68               | enum_variables ',' VARIABLE •

    '='  shift, and go to state 154

    $default  reduce using rule 68 (enum_variables)


State 145

   64 function: VOID VARIABLE '(' function_parameters ')' '{' • recursive_statement '}'

    $default  reduce using rule 8 (recursive_statement)

    recursive_statement  go to state 155


State 146

   57 parameter: parameter ',' variable_Type • VARIABLE

    VARIABLE  shift, and go to state 156


State 147

   63 function: variable_Type VARIABLE '(' function_parameters ')' '{' • recursive_statement RETURN return_types ';' '}'

    $default  reduce using rule 8 (recursive_statement)

    recursive_statement  go to state 157


State 148

   11 if_conditional_statement: IF '(' expressions ')' '{' recursive_statement '}' • ELSE '{' recursive_statement '}'
   12                         | IF '(' expressions ')' '{' recursive_statement '}' •

    ELSE  shift, and go to state 158

    $default  reduce using rule 12 (if_conditional_statement)


State 149

   19 for_loop_statement: FOR '(' assignment ';' expressions ';' assignment • ')' '{' recursive_statement '}'

    ')'  shift, and go to state 159


State 150

   20 while_loop_statement: WHILE '(' expressions ')' '{' recursive_statement '}' •

    $default  reduce using rule 20 (while_loop_statement)


State 151

   21 do_while_loop_statement: DO '{' recursive_statement '}' WHILE '(' expressions • ')'
   26 expressions: expressions • OR first

    OR   shift, and go to state 62
    ')'  shift, and go to state 160


State 152

   14 case_statement: case_statement CASE • variable_value ':' recursive_statement BREAK

    INTEGER     shift, and go to state 15
    FLOAT       shift, and go to state 16
    BOOL_FALSE  shift, and go to state 17
    BOOL_TRUE   shift, and go to state 18
    CHAR        shift, and go to state 19
    STRING      shift, and go to state 20

    variable_value  go to state 161


State 153

   13 switch_conditional_statement: SWITCH '(' VARIABLE ')' '{' case_statement '}' •

    $default  reduce using rule 13 (switch_conditional_statement)


State 154

   67 enum_variables: enum_variables ',' VARIABLE '=' • expressions

    INTEGER     shift, and go to state 15
    FLOAT       shift, and go to state 16
    BOOL_FALSE  shift, and go to state 17
    BOOL_TRUE   shift, and go to state 18
    CHAR        shift, and go to state 19
    STRING      shift, and go to state 20
    VARIABLE    shift, and go to state 57
    '('         shift, and go to state 22
    '-'         shift, and go to state 23
    '!'         shift, and go to state 24

    expressions     go to state 162
    first           go to state 35
    second          go to state 36
    third           go to state 37
    fourth          go to state 38
    fifth           go to state 39
    sixth           go to state 40
    seventh         go to state 41
    function_call   go to state 42
    variable_value  go to state 47


State 155

    7 recursive_statement: recursive_statement • statement
   64 function: VOID VARIABLE '(' function_parameters ')' '{' recursive_statement • '}'

    IF           shift, and go to state 3
    FOR          shift, and go to state 4
    WHILE        shift, and go to state 5
    DO           shift, and go to state 6
    SWITCH       shift, and go to state 7
    ENUM         shift, and go to state 77
    INT_TYPE     shift, and go to state 10
    CHAR_TYPE    shift, and go to state 11
    BOOL_TYPE    shift, and go to state 12
    FLOAT_TYPE   shift, and go to state 13
    STRING_TYPE  shift, and go to state 14
    INTEGER      shift, and go to state 15
    FLOAT        shift, and go to state 16
    BOOL_FALSE   shift, and go to state 17
    BOOL_TRUE    shift, and go to state 18
    CHAR         shift, and go to state 19
    STRING       shift, and go to state 20
    VARIABLE     shift, and go to state 21
    '('          shift, and go to state 22
    '}'          shift, and go to state 163
    '-'          shift, and go to state 23
    '!'          shift, and go to state 24

    statement                     go to state 112
    conditional_statement         go to state 26
    if_conditional_statement      go to state 27
    switch_conditional_statement  go to state 28
    loop_statement                go to state 29
    for_loop_statement            go to state 30
    while_loop_statement          go to state 31
    do_while_loop_statement       go to state 32
    assignment                    go to state 33
    expressions                   go to state 34
    first                         go to state 35
    second                        go to state 36
    third                         go to state 37
    fourth                        go to state 38
    fifth                         go to state 39
    sixth                         go to state 40
    seventh                       go to state 41
    function_call                 go to state 42
    variable_Type                 go to state 79
    variable_value                go to state 47


State 156

   57 parameter: parameter ',' variable_Type VARIABLE •

    $default  reduce using rule 57 (parameter)


State 157

    7 recursive_statement: recursive_statement • statement
   63 function: variable_Type VARIABLE '(' function_parameters ')' '{' recursive_statement • RETURN return_types ';' '}'

    IF           shift, and go to state 3
    FOR          shift, and go to state 4
    WHILE        shift, and go to state 5
    DO           shift, and go to state 6
    SWITCH       shift, and go to state 7
    RETURN       shift, and go to state 164
    ENUM         shift, and go to state 77
    INT_TYPE     shift, and go to state 10
    CHAR_TYPE    shift, and go to state 11
    BOOL_TYPE    shift, and go to state 12
    FLOAT_TYPE   shift, and go to state 13
    STRING_TYPE  shift, and go to state 14
    INTEGER      shift, and go to state 15
    FLOAT        shift, and go to state 16
    BOOL_FALSE   shift, and go to state 17
    BOOL_TRUE    shift, and go to state 18
    CHAR         shift, and go to state 19
    STRING       shift, and go to state 20
    VARIABLE     shift, and go to state 21
    '('          shift, and go to state 22
    '-'          shift, and go to state 23
    '!'          shift, and go to state 24

    statement                     go to state 112
    conditional_statement         go to state 26
    if_conditional_statement      go to state 27
    switch_conditional_statement  go to state 28
    loop_statement                go to state 29
    for_loop_statement            go to state 30
    while_loop_statement          go to state 31
    do_while_loop_statement       go to state 32
    assignment                    go to state 33
    expressions                   go to state 34
    first                         go to state 35
    second                        go to state 36
    third                         go to state 37
    fourth                        go to state 38
    fifth                         go to state 39
    sixth                         go to state 40
    seventh                       go to state 41
    function_call                 go to state 42
    variable_Type                 go to state 79
    variable_value                go to state 47


State 158

   11 if_conditional_statement: IF '(' expressions ')' '{' recursive_statement '}' ELSE • '{' recursive_statement '}'

    '{'  shift, and go to state 165


State 159

   19 for_loop_statement: FOR '(' assignment ';' expressions ';' assignment ')' • '{' recursive_statement '}'

    '{'  shift, and go to state 166


State 160

   21 do_while_loop_statement: DO '{' recursive_statement '}' WHILE '(' expressions ')' •

    $default  reduce using rule 21 (do_while_loop_statement)


State 161

   14 case_statement: case_statement CASE variable_value • ':' recursive_statement BREAK

    ':'  shift, and go to state 167


State 162

   26 expressions: expressions • OR first
   67 enum_variables: enum_variables ',' VARIABLE '=' expressions •

    OR  shift, and go to state 62

    $default  reduce using rule 67 (enum_variables)


State 163

   64 function: VOID VARIABLE '(' function_parameters ')' '{' recursive_statement '}' •

    $default  reduce using rule 64 (function)


State 164

   63 function: variable_Type VARIABLE '(' function_parameters ')' '{' recursive_statement RETURN • return_types ';' '}'

    INTEGER     shift, and go to state 15
    FLOAT       shift, and go to state 16
    BOOL_FALSE  shift, and go to state 17
    BOOL_TRUE   shift, and go to state 18
    CHAR        shift, and go to state 19
    STRING      shift, and go to state 20
    VARIABLE    shift, and go to state 57
    '('         shift, and go to state 22
    '-'         shift, and go to state 23
    '!'         shift, and go to state 24

    expressions     go to state 168
    first           go to state 35
    second          go to state 36
    third           go to state 37
    fourth          go to state 38
    fifth           go to state 39
    sixth           go to state 40
    seventh         go to state 41
    function_call   go to state 42
    return_types    go to state 169
    variable_value  go to state 47


State 165

   11 if_conditional_statement: IF '(' expressions ')' '{' recursive_statement '}' ELSE '{' • recursive_statement '}'

    $default  reduce using rule 8 (recursive_statement)

    recursive_statement  go to state 170


State 166

   19 for_loop_statement: FOR '(' assignment ';' expressions ';' assignment ')' '{' • recursive_statement '}'

    $default  reduce using rule 8 (recursive_statement)

    recursive_statement  go to state 171


State 167

   14 case_statement: case_statement CASE variable_value ':' • recursive_statement BREAK

    $default  reduce using rule 8 (recursive_statement)

    recursive_statement  go to state 172


State 168

   26 expressions: expressions • OR first
   65 return_types: expressions •

    OR  shift, and go to state 62

    $default  reduce using rule 65 (return_types)


State 169

   63 function: variable_Type VARIABLE '(' function_parameters ')' '{' recursive_statement RETURN return_types • ';' '}'

    ';'  shift, and go to state 173


State 170

    7 recursive_statement: recursive_statement • statement
   11 if_conditional_statement: IF '(' expressions ')' '{' recursive_statement '}' ELSE '{' recursive_statement • '}'

    IF           shift, and go to state 3
    FOR          shift, and go to state 4
    WHILE        shift, and go to state 5
    DO           shift, and go to state 6
    SWITCH       shift, and go to state 7
    ENUM         shift, and go to state 77
    INT_TYPE     shift, and go to state 10
    CHAR_TYPE    shift, and go to state 11
    BOOL_TYPE    shift, and go to state 12
    FLOAT_TYPE   shift, and go to state 13
    STRING_TYPE  shift, and go to state 14
    INTEGER      shift, and go to state 15
    FLOAT        shift, and go to state 16
    BOOL_FALSE   shift, and go to state 17
    BOOL_TRUE    shift, and go to state 18
    CHAR         shift, and go to state 19
    STRING       shift, and go to state 20
    VARIABLE     shift, and go to state 21
    '('          shift, and go to state 22
    '}'          shift, and go to state 174
    '-'          shift, and go to state 23
    '!'          shift, and go to state 24

    statement                     go to state 112
    conditional_statement         go to state 26
    if_conditional_statement      go to state 27
    switch_conditional_statement  go to state 28
    loop_statement                go to state 29
    for_loop_statement            go to state 30
    while_loop_statement          go to state 31
    do_while_loop_statement       go to state 32
    assignment                    go to state 33
    expressions                   go to state 34
    first                         go to state 35
    second                        go to state 36
    third                         go to state 37
    fourth                        go to state 38
    fifth                         go to state 39
    sixth                         go to state 40
    seventh                       go to state 41
    function_call                 go to state 42
    variable_Type                 go to state 79
    variable_value                go to state 47


State 171

    7 recursive_statement: recursive_statement • statement
   19 for_loop_statement: FOR '(' assignment ';' expressions ';' assignment ')' '{' recursive_statement • '}'

    IF           shift, and go to state 3
    FOR          shift, and go to state 4
    WHILE        shift, and go to state 5
    DO           shift, and go to state 6
    SWITCH       shift, and go to state 7
    ENUM         shift, and go to state 77
    INT_TYPE     shift, and go to state 10
    CHAR_TYPE    shift, and go to state 11
    BOOL_TYPE    shift, and go to state 12
    FLOAT_TYPE   shift, and go to state 13
    STRING_TYPE  shift, and go to state 14
    INTEGER      shift, and go to state 15
    FLOAT        shift, and go to state 16
    BOOL_FALSE   shift, and go to state 17
    BOOL_TRUE    shift, and go to state 18
    CHAR         shift, and go to state 19
    STRING       shift, and go to state 20
    VARIABLE     shift, and go to state 21
    '('          shift, and go to state 22
    '}'          shift, and go to state 175
    '-'          shift, and go to state 23
    '!'          shift, and go to state 24

    statement                     go to state 112
    conditional_statement         go to state 26
    if_conditional_statement      go to state 27
    switch_conditional_statement  go to state 28
    loop_statement                go to state 29
    for_loop_statement            go to state 30
    while_loop_statement          go to state 31
    do_while_loop_statement       go to state 32
    assignment                    go to state 33
    expressions                   go to state 34
    first                         go to state 35
    second                        go to state 36
    third                         go to state 37
    fourth                        go to state 38
    fifth                         go to state 39
    sixth                         go to state 40
    seventh                       go to state 41
    function_call                 go to state 42
    variable_Type                 go to state 79
    variable_value                go to state 47


State 172

    7 recursive_statement: recursive_statement • statement
   14 case_statement: case_statement CASE variable_value ':' recursive_statement • BREAK

    IF           shift, and go to state 3
    FOR          shift, and go to state 4
    WHILE        shift, and go to state 5
    DO           shift, and go to state 6
    SWITCH       shift, and go to state 7
    BREAK        shift, and go to state 176
    ENUM         shift, and go to state 77
    INT_TYPE     shift, and go to state 10
    CHAR_TYPE    shift, and go to state 11
    BOOL_TYPE    shift, and go to state 12
    FLOAT_TYPE   shift, and go to state 13
    STRING_TYPE  shift, and go to state 14
    INTEGER      shift, and go to state 15
    FLOAT        shift, and go to state 16
    BOOL_FALSE   shift, and go to state 17
    BOOL_TRUE    shift, and go to state 18
    CHAR         shift, and go to state 19
    STRING       shift, and go to state 20
    VARIABLE     shift, and go to state 21
    '('          shift, and go to state 22
    '-'          shift, and go to state 23
    '!'          shift, and go to state 24

    statement                     go to state 112
    conditional_statement         go to state 26
    if_conditional_statement      go to state 27
    switch_conditional_statement  go to state 28
    loop_statement                go to state 29
    for_loop_statement            go to state 30
    while_loop_statement          go to state 31
    do_while_loop_statement       go to state 32
    assignment                    go to state 33
    expressions                   go to state 34
    first                         go to state 35
    second                        go to state 36
    third                         go to state 37
    fourth                        go to state 38
    fifth                         go to state 39
    sixth                         go to state 40
    seventh                       go to state 41
    function_call                 go to state 42
    variable_Type                 go to state 79
    variable_value                go to state 47


State 173

   63 function: variable_Type VARIABLE '(' function_parameters ')' '{' recursive_statement RETURN return_types ';' • '}'

    '}'  shift, and go to state 177


State 174

   11 if_conditional_statement: IF '(' expressions ')' '{' recursive_statement '}' ELSE '{' recursive_statement '}' •

    $default  reduce using rule 11 (if_conditional_statement)


State 175

   19 for_loop_statement: FOR '(' assignment ';' expressions ';' assignment ')' '{' recursive_statement '}' •

    $default  reduce using rule 19 (for_loop_statement)


State 176

   14 case_statement: case_statement CASE variable_value ':' recursive_statement BREAK •

    $default  reduce using rule 14 (case_statement)


State 177

   63 function: variable_Type VARIABLE '(' function_parameters ')' '{' recursive_statement RETURN return_types ';' '}' •

    $default  reduce using rule 63 (function)
